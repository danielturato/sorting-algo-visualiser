{"version":3,"sources":["algorithms/BubbleSort.js","algorithms/InsertionSort.js","algorithms/SelectionSort.js","App.js","index.js"],"names":["BubbleSort","array","animations","counter","isSorted","i","length","animation","push","swap","j","temp","BubbleSortAnimations","InsertionSort","InsertionSortAnimations","SelectionSort","startIdx","lowestIdx","SelectionSortAnimations","App","state","this","generateArray","Math","floor","random","setState","resetArrayBars","firstElement","secondElement","colour","style","backgroundColor","firstHeight","height","document","querySelectorAll","visualizerArray","getVisualizerArrayBars","comparisons","swapped","finished","firstValue","secondValue","setTimeout","swapHeights","className","id","onClick","bubbleSort","insertionSort","selectionSort","mergeSort","quickSort","heapSort","map","value","idx","key","Component","ReactDOM","render","getElementById"],"mappings":"mRAIMA,G,MAAa,SAACC,GAKhB,IAJA,IAAMC,EAAa,GACfC,EAAU,EACVC,GAAW,GAERA,GAAU,CACbA,GAAW,EAEX,IAAK,IAAIC,EAAE,EAAGA,EAAEJ,EAAMK,OAAS,EAAIH,EAASE,IAAK,CAC7C,IAAIE,EAAY,GACZN,EAAMI,GAAKJ,EAAMI,EAAE,IACnBE,EAAUC,KAAK,CAACH,EAAGA,EAAE,IAAI,GACzBI,EAAKJ,EAAGA,EAAE,EAAGJ,GACbG,GAAW,GAEXG,EAAUC,KAAK,CAACH,EAAGA,EAAE,IAAI,GAG7BE,EAAUC,KAAMH,EAAE,GAAOJ,EAAMK,OAAO,EAAEH,GACxCD,EAAWM,KAAKD,GAGpB,GAAIH,EACA,IAAK,IAAIC,EAAE,EAAGA,EAAEJ,EAAMK,OAAS,EAAIH,EAASE,IACxCH,EAAWM,KAAK,CAAC,CAAC,KAAMH,IAAI,GAAO,IAI3CF,IAGJ,OAAOD,IAGLO,EAAO,SAACJ,EAAGK,EAAGT,GAChB,IAAMU,EAAOV,EAAMS,GACnBT,EAAMS,GAAKT,EAAMI,GACjBJ,EAAMI,GAAKM,GAGAC,EA5Cc,SAACX,GAC1B,OAAOD,EAAWC,ICGhBY,EAAgB,SAACZ,GAGnB,IAFA,IAAMC,EAAa,GAEVG,EAAE,EAAGA,EAAEJ,EAAMK,OAAQD,IAE1B,IADA,IAAIK,EAAIL,EACDK,GAAK,GAAKT,EAAMS,GAAKT,EAAMS,EAAE,IAChCR,EAAWM,KAAK,CAACE,EAAGA,EAAE,IACtBD,EAAKC,EAAGA,EAAE,EAAGT,GACbS,GAAK,EAIb,OAAOR,GAGLO,EAAO,SAACJ,EAAGK,EAAGT,GAChB,IAAMU,EAAOV,EAAMI,GACnBJ,EAAMI,GAAKJ,EAAMS,GACjBT,EAAMS,GAAKC,GAGAG,EAzBiB,SAACb,GAC7B,OAAOY,EAAcZ,ICGnBc,EAAgB,SAACd,GAInB,IAHA,IAAIe,EAAW,EACXd,EAAa,GAEVc,EAAWf,EAAMK,OAAS,GAAG,CAEhC,IADA,IAAIW,EAAYD,EACPX,EAAGW,EAAW,EAAGX,EAAIJ,EAAMK,OAAQD,IACpCJ,EAAMI,GAAKJ,EAAMgB,KACjBA,EAAYZ,GAGpBH,EAAWM,KAAK,CAACQ,EAAUC,IAC3BR,EAAKO,EAAUC,EAAWhB,GAC1Be,IAKJ,OAFAd,EAAWM,KAAK,CAACP,EAAMK,OAAO,EAAG,OAE1BJ,GAGLO,EAAO,SAACJ,EAAGK,EAAGT,GAChB,IAAMU,EAAOV,EAAMI,GACnBJ,EAAMI,GAAKJ,EAAMS,GACjBT,EAAMS,GAAKC,GAGAO,EA/BiB,SAACjB,GAC7B,OAAOc,EAAcd,ICgLVkB,E,2MApKbC,MAAQ,CACNnB,MAAO,I,mFAIPoB,KAAKC,kB,sCAKL,IADA,IAAMrB,EAAQ,GACLI,EAAG,EAAGA,EAAE,IAAKA,IACpBJ,EAAMO,KAAKe,KAAKC,MAAM,IAAAD,KAAKE,SAA2B,IAGxDJ,KAAKK,SAAS,CAACzB,MAAOA,IACtBoB,KAAKM,mB,mCAGMC,EAAcC,EAAeC,GACxCF,EAAaG,MAAMC,gBAAkBF,EACrCD,EAAcE,MAAMC,gBAAkBF,I,kCAG5BF,EAAcC,GACxB,IAAMI,EAAcL,EAAaG,MAAMG,OACvCN,EAAaG,MAAMG,OAASL,EAAcE,MAAMG,OAChDL,EAAcE,MAAMG,OAASD,I,+CAI7B,OAAOE,SAASC,iBAAiB,e,uCAKjC,IADA,IAAMC,EAAkBhB,KAAKiB,yBACpBjC,EAAI,EAAGA,EAAIgC,EAAgB/B,OAAQD,IAC1CgC,EAAgBhC,GAAG0B,MAAMC,gBAxCR,Y,mCAgDnB,IAJY,IAAD,OACL9B,EAAaU,EAAqBS,KAAKD,MAAMnB,OAC7CoC,EAAkBhB,KAAKiB,yBAFlB,WAIFjC,GAEP,IAAMkC,EAAcrC,EAAWG,GAAG,GAC5BmC,EAAUtC,EAAWG,GAAG,GACxBoC,EAAWvC,EAAWG,GAAG,GACzBqC,EAAaL,EAAgBE,EAAY,IACzCI,EAAcN,EAAgBE,EAAY,IAE5CE,GACFG,YAAW,WACTD,EAAYZ,MAAMC,gBA3DJ,YADA,EA6Db3B,GAGDmC,GACFI,YAAW,WACT,EAAKC,YAAYH,EAAYC,KAlEf,EAmEbtC,IAjBEA,EAAE,EAAGA,EAAIH,EAAWI,OAAQD,IAAM,EAAlCA,K,sCAuBM,IAAD,OACRH,EAAaY,EAAwBO,KAAKD,MAAMnB,OAChDoC,EAAkBhB,KAAKiB,yBAC7BD,EAAgB,GAAGN,MAAMC,gBA3EL,UA6EpB,IALc,eAKL3B,GACP,IAAMkC,EAAcrC,EAAWG,GACzBqC,EAAaL,EAAgBE,EAAY,IACzCI,EAAcN,EAAgBE,EAAY,IAEhDK,YAAW,WACTF,EAAWX,MAAMC,gBAnFD,YADA,EAqFf3B,GAEHuC,YAAW,WACT,EAAKC,YAAYH,EAAYC,KAxFb,EAyFftC,IAXIA,EAAE,EAAGA,EAAIH,EAAWI,OAAQD,IAAM,EAAlCA,K,sCAmBT,IAJe,IAAD,OACRH,EAAagB,EAAwBG,KAAKD,MAAMnB,OAChDoC,EAAkBhB,KAAKiB,yBAFf,WAILjC,GACP,IAAMkC,EAAcrC,EAAWG,GACzBqC,EAAaL,EAAgBE,EAAY,IACzCI,EAAcN,EAAgBE,EAAY,IAE7B,MAAfI,EACFC,YAAW,WACTF,EAAWX,MAAMC,gBAvGH,YADA,EAyGb3B,IAEHuC,YAAW,WACTF,EAAWX,MAAMC,gBA3GH,YADA,EA6Gb3B,GAEHuC,YAAW,WACT,EAAKC,YAAYH,EAAYC,KAhHf,EAiHbtC,KAhBEA,EAAI,EAAGA,EAAIH,EAAWI,OAAQD,IAAM,EAApCA,K,6IA2BD,IAAD,OACP,OACE,oCACE,yBAAKyC,UAAU,YACb,wBAAIA,UAAU,kBACZ,wBAAIC,GAAG,aAAaC,QAAS,kBAAM,EAAK1B,kBAAxC,eAGA,wBAAI0B,QAAS,kBAAM,EAAKC,eAAxB,eAGA,wBAAID,QAAS,kBAAM,EAAKE,kBAAxB,kBAGA,wBAAIF,QAAS,kBAAM,EAAKG,kBAAxB,kBAGA,wBAAIH,QAAS,kBAAM,EAAKI,cAAxB,cAGA,wBAAIJ,QAAS,kBAAM,EAAKK,cAAxB,cAGA,wBAAIL,QAAS,kBAAM,EAAKM,aAAxB,eAMJ,yBAAKR,UAAU,kBACZzB,KAAKD,MAAMnB,MAAMsD,KAAI,SAACC,EAAOC,GAAR,OACtB,yBACEX,UAAY,WACZY,IAAKD,EACL1B,MAAO,CACLC,gBA7JS,UA8JTE,OAAO,GAAD,OAAKsB,EAAL,kB,GA5JFG,aCLlBC,IAASC,OAAO,kBAAC,EAAD,MAAS1B,SAAS2B,eAAe,U","file":"static/js/main.40202d8c.chunk.js","sourcesContent":["const BubbleSortAnimations = (array) => {\r\n    return BubbleSort(array);\r\n}\r\n\r\nconst BubbleSort = (array) => {\r\n    const animations = [];\r\n    var counter = 0;\r\n    var isSorted = false;\r\n\r\n    while(!isSorted) {\r\n        isSorted = true;\r\n        \r\n        for (let i=0; i<array.length - 1 - counter; i++) {\r\n            var animation = [];\r\n            if (array[i] > array[i+1]) {\r\n                animation.push([i, i+1], true);\r\n                swap(i, i+1, array);\r\n                isSorted = false;\r\n            } else {\r\n                animation.push([i, i+1], false);\r\n            }\r\n\r\n            animation.push((i+1) >= (array.length-1-counter) ? true : false);\r\n            animations.push(animation);\r\n        }\r\n\r\n        if (isSorted) {\r\n            for (let i=0; i<array.length - 1 - counter; i++) {\r\n                animations.push([[null, i], false, true]);\r\n            }\r\n        }\r\n\r\n        counter++;\r\n    }\r\n\r\n    return animations;\r\n}\r\n\r\nconst swap = (i, j, array) => {\r\n    const temp = array[j];\r\n    array[j] = array[i];\r\n    array[i] = temp;\r\n}\r\n\r\nexport default BubbleSortAnimations;","const InsertionSortAnimations = (array) => {\r\n    return InsertionSort(array);\r\n}\r\n\r\nconst InsertionSort = (array) => {\r\n    const animations = [];\r\n\r\n    for (let i=1; i<array.length; i++) {\r\n        var j = i;\r\n        while (j >= 0 && array[j] < array[j-1]) {\r\n            animations.push([j, j-1]);\r\n            swap(j, j-1, array);\r\n            j -= 1;\r\n        }\r\n    }\r\n\r\n    return animations;\r\n}\r\n\r\nconst swap = (i, j, array) => {\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n}\r\n\r\nexport default InsertionSortAnimations;","const SelectionSortAnimations = (array) => {\r\n    return SelectionSort(array);\r\n}\r\n\r\nconst SelectionSort = (array) => {\r\n    var startIdx = 0;\r\n    var animations = [];\r\n\r\n    while (startIdx < array.length - 1) {\r\n        var lowestIdx = startIdx;\r\n        for (let i= startIdx + 1; i < array.length; i++) {\r\n            if (array[i] < array[lowestIdx]) {\r\n                lowestIdx = i;\r\n            }\r\n        }\r\n        animations.push([startIdx, lowestIdx]);\r\n        swap(startIdx, lowestIdx, array);\r\n        startIdx++;\r\n    }\r\n\r\n    animations.push([array.length-1, null]);\r\n\r\n    return animations;\r\n}\r\n\r\nconst swap = (i, j, array) => {\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n}\r\n\r\nexport default SelectionSortAnimations;","import React, {Component} from 'react';\r\n\r\nimport './App.css';\r\nimport BubbleSortAnimations from './algorithms/BubbleSort.js';\r\nimport InsertionSortAnimations from './algorithms/InsertionSort.js';\r\nimport SelectionSortAnimations from './algorithms/SelectionSort.js';\r\n\r\nconst ANIMATION_SPEED = 1;\r\nconst FINISHED_COLOUR = '#EC9B3B';\r\nconst DEFAULT_COLOUR = '#00818A';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    array: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.generateArray();\r\n  }\r\n\r\n  generateArray() {\r\n    const array = [];\r\n    for (let i =0; i<300; i++) {\r\n      array.push(Math.floor(Math.random() * (700 - 5 + 1) + 5));\r\n    }\r\n\r\n    this.setState({array: array});\r\n    this.resetArrayBars();\r\n  }\r\n\r\n  changeColour(firstElement, secondElement, colour) {\r\n    firstElement.style.backgroundColor = colour;\r\n    secondElement.style.backgroundColor = colour;\r\n  }\r\n\r\n  swapHeights(firstElement, secondElement) {\r\n    const firstHeight = firstElement.style.height;\r\n    firstElement.style.height = secondElement.style.height;\r\n    secondElement.style.height = firstHeight;\r\n  }\r\n\r\n  getVisualizerArrayBars() {\r\n    return document.querySelectorAll('.list-bar');\r\n  }\r\n\r\n  resetArrayBars() {\r\n    const visualizerArray = this.getVisualizerArrayBars();\r\n    for (let i = 0; i < visualizerArray.length; i++) {\r\n      visualizerArray[i].style.backgroundColor = DEFAULT_COLOUR;\r\n    }\r\n  }\r\n\r\n  bubbleSort() {\r\n    const animations = BubbleSortAnimations(this.state.array);\r\n    const visualizerArray = this.getVisualizerArrayBars();\r\n\r\n    for (let i=0; i < animations.length; i++) {\r\n\r\n      const comparisons = animations[i][0];\r\n      const swapped = animations[i][1];\r\n      const finished = animations[i][2];\r\n      const firstValue = visualizerArray[comparisons[0]];\r\n      const secondValue = visualizerArray[comparisons[1]];\r\n\r\n      if (finished) {\r\n        setTimeout(() => {\r\n          secondValue.style.backgroundColor = FINISHED_COLOUR;\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n\r\n      if (swapped) {\r\n        setTimeout(() => {\r\n          this.swapHeights(firstValue, secondValue);\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  insertionSort() {\r\n    const animations = InsertionSortAnimations(this.state.array);\r\n    const visualizerArray = this.getVisualizerArrayBars(); \r\n    visualizerArray[0].style.backgroundColor = FINISHED_COLOUR;\r\n\r\n    for (let i=0; i < animations.length; i++) {\r\n      const comparisons = animations[i];\r\n      const firstValue = visualizerArray[comparisons[0]];\r\n      const secondValue = visualizerArray[comparisons[1]];\r\n\r\n      setTimeout(() => {\r\n        firstValue.style.backgroundColor = FINISHED_COLOUR;\r\n      }, i * ANIMATION_SPEED)\r\n\r\n      setTimeout(() => {\r\n        this.swapHeights(firstValue, secondValue);\r\n      }, i * ANIMATION_SPEED);\r\n     }\r\n  }\r\n\r\n  selectionSort() {\r\n    const animations = SelectionSortAnimations(this.state.array);\r\n    const visualizerArray = this.getVisualizerArrayBars();\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const comparisons = animations[i];\r\n      const firstValue = visualizerArray[comparisons[0]];\r\n      const secondValue = visualizerArray[comparisons[1]];\r\n\r\n      if (secondValue == null) {\r\n        setTimeout(() => {\r\n          firstValue.style.backgroundColor = FINISHED_COLOUR;\r\n        }, i * ANIMATION_SPEED)\r\n      } else {\r\n        setTimeout(() => {\r\n          firstValue.style.backgroundColor = FINISHED_COLOUR;\r\n        }, i * ANIMATION_SPEED)\r\n  \r\n        setTimeout(() => {\r\n          this.swapHeights(firstValue, secondValue);\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n    }\r\n  }\r\n\r\n  mergeSort() {}\r\n\r\n  quickSort() {}\r\n\r\n  heapSort() {}\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <nav className=\"main-nav\">\r\n          <ul className=\"main-nav-items\">\r\n            <li id=\"resetArray\" onClick={() => this.generateArray()}>\r\n            Reset Array\r\n            </li>\r\n            <li onClick={() => this.bubbleSort()}>\r\n            Bubble Sort\r\n            </li>\r\n            <li onClick={() => this.insertionSort()}>\r\n            Insertion Sort\r\n            </li>\r\n            <li onClick={() => this.selectionSort()}>\r\n            Selection Sort\r\n            </li>\r\n            <li onClick={() => this.mergeSort()}>\r\n            Merge Sort\r\n            </li>\r\n            <li onClick={() => this.quickSort()}>\r\n            Quick Sort\r\n            </li>\r\n            <li onClick={() => this.heapSort()}>\r\n            Heap Sort\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        \r\n        <div className=\"list-container\">\r\n          {this.state.array.map((value, idx) => (\r\n          <div \r\n            className = \"list-bar\"\r\n            key={idx}\r\n            style={{\r\n              backgroundColor: DEFAULT_COLOUR,\r\n              height: `${value}px`\r\n            }}>\r\n          </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}